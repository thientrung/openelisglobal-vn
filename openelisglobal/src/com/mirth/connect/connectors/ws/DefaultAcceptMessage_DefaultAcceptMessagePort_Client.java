
package com.mirth.connect.connectors.ws;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import javax.swing.JApplet;
import javax.xml.namespace.QName;

import us.mn.state.health.lims.common.util.StringUtil;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-09-16T15:23:45.863+07:00
 * Generated source version: 3.1.6
 * 
 */
public final class DefaultAcceptMessage_DefaultAcceptMessagePort_Client extends JApplet {

    public static final QName SERVICE_NAME = new QName("http://ws.connectors.connect.mirth.com/", "DefaultAcceptMessageService");

    public DefaultAcceptMessage_DefaultAcceptMessagePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = DefaultAcceptMessageService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        DefaultAcceptMessageService ss = new DefaultAcceptMessageService(wsdlURL, SERVICE_NAME);
        DefaultAcceptMessage port = ss.getDefaultAcceptMessagePort();  
        
        System.out.println("Invoking acceptMessage...");
        java.lang.String _acceptMessage_arg0 = "_acceptMessage_arg0-344138115";
        java.lang.String _acceptMessage__return = port.acceptMessage(_acceptMessage_arg0);
        System.out.println("acceptMessage.result=" + _acceptMessage__return);

        System.exit(0);
    }
    
    public String getExternalLabOrder(String externalOrderNumber) throws java.lang.Exception {
        URL wsdlURL = DefaultAcceptMessageService.WSDL_LOCATION;
        if (!StringUtil.isNullorNill(externalOrderNumber)) { 
            File wsdlFile = new File(externalOrderNumber);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
        DefaultAcceptMessageService ss = new DefaultAcceptMessageService(wsdlURL, SERVICE_NAME);
        DefaultAcceptMessage port = ss.getDefaultAcceptMessagePort();  
        
        System.out.println("Invoking acceptMessage...");
        //java.lang.String _acceptMessage_arg0 = "Herere";
        //java.lang.String _acceptMessage__return = port.acceptMessage(_acceptMessage_arg0);
        String result = port.acceptMessage(externalOrderNumber);
        System.out.println("acceptMessage.result=" + result);

        return result;
    }

}
